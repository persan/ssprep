--=============================================================================
-- Copyright (C)  2005 SAAB SYSTEMS
--=============================================================================
--    Creation Information:
--          This file was automatically generated
--          Using         : make_gpr 1.3 (2006-08-24)
--          By User       : stoma
--          Creation Date : 2006-10-12
--
--
--
--=============================================================================

with "syst_default.ss/syst_default.gpr";
Project Adty_Booch is

   Base := "./"; --<Base>
   --  Base identifies the sourcecode location
   --  When using {Tower} development './'.
   --  When using remote sources  '<full path to the source location>'.
   --   sample "\\scupper\VSS_DB\VSS_Ada_Working_Views\aapt_code.nt.wrk\".
   --  NOTE the trailing directory delimiter.



   for Source_Dirs use (Base & "private",
                        Base & "shared");
   for Object_Dir use Syst_Default'Object_Dir;
   for Exec_Dir use Syst_Default'Exec_Dir;

   Name := "adty_booch";
   case Syst_Default.Library_Kind is
      when "static" | "dynamic" =>
         for Library_Kind    use Syst_Default'Library_Kind;
         for Library_Dir     use Syst_Default'Library_Dir;
         for Library_Src_Dir use Syst_Default'Library_Src_Dir;
         for Library_Name use Name;
         case Syst_Default.Library_Kind is
            when "dynamic" =>
               for Library_Auto_Init use "True";
               for Library_Name use Project'Library_Name & Syst_Default.Dynamic_Lib_Sufix;
               for Library_Interface use ("adty_semaphore",
                                          "bag_discrete_sequential_bounded_managed_iterator",
                                          "bag_simple_sequential_bounded_managed_iterator",
                                          "binary_insertion_sort_generic",
                                          "binary_search_generic",
                                          "bubble_sort_generic",
                                          "compress_filter_generic",
                                          "deque_nonpriority_balking_sequential_bounded_managed_iterator",
                                          "deque_nonpriority_balking_sequential_bounded_managed_iterators",
                                          "deque_nonpriority_nonbalking_sequential_bounded_managed_iterator",
                                          "deque_nonpriority_nonbalking_sequential_bounded_managed_iterators",
                                          "deque_priority_balking_sequential_bounded_managed_iterator",
                                          "deque_priority_balking_sequential_bounded_managed_iterators",
                                          "deque_priority_nonbalking_sequential_bounded_managed_iterator",
                                          "deque_priority_nonbalking_sequential_bounded_managed_iterators",
                                          "english_character_utilities",
                                          "english_string_utilities",
                                          "expand_filter_generic",
                                          "fixed_point_utilities_generic",
                                          "floating_point_utilities_generic",
                                          "graph_directed_bounded_managed",
                                          "graph_search_bounded_managed_generic",
                                          "graph_undirected_bounded_managed",
                                          "graph_utilities_directed_generic",
                                          "graph_utilities_undirected_generic",
                                          "heap_sort_generic",
                                          "input_filter_generic",
                                          "integer_utilities_generic",
                                          "list_double_bounded_managed",
                                          "list_search_generic",
                                          "list_single_bounded_managed",
                                          "list_utilities_double_generic",
                                          "list_utilities_single_generic",
                                          "map_discrete_noncached_sequential_bounded_managed_iterator",
                                          "map_simple_cached_sequential_bounded_managed_iterator",
                                          "map_simple_noncached_sequential_bounded_managed_iterator",
                                          "monitor",
                                          "natural_merge_sort_generic",
                                          "ordered_sequential_search_generic",
                                          "output_filter_generic",
                                          "pattern_match_boyer_moore_generic",
                                          "pattern_match_knuth_morris_pratt_generic",
                                          "pattern_match_regular_expression_generic",
                                          "pattern_match_simple_generic",
                                          "pipe_bounded_managed",
                                          "polyphase_sort_generic",
                                          "queue_nonpriority_balking_concurrent_bounded_managed_iterator",
                                          "queue_nonpriority_balking_guarded_bounded_managed_iterator",
                                          "queue_nonpriority_balking_multiple_bounded_managed_iterator",
                                          "queue_nonpriority_balking_sequential_bounded_managed_iterator",
                                          "queue_nonpriority_balking_sequential_bounded_managed_iterators",
                                          "queue_nonpriority_nonbalking_concurrent_bounded_managed_iterator",
                                          "queue_nonpriority_nonbalking_guarded_bounded_managed_iterator",
                                          "queue_nonpriority_nonbalking_multiple_bounded_managed_iterator",
                                          "queue_nonpriority_nonbalking_sequential_bounded_managed_iterator",
                                          "queue_nonpriority_nonbalking_sequential_bounded_managed_iterators",
                                          "queue_priority_balking_concurrent_bounded_managed_iterator",
                                          "queue_priority_balking_guarded_bounded_managed_iterator",
                                          "queue_priority_balking_multiple_bounded_managed_iterator",
                                          "queue_priority_balking_sequential_bounded_managed_iterator",
                                          "queue_priority_balking_sequential_bounded_managed_iterators",
                                          "queue_priority_nonbalking_concurrent_bounded_managed_iterator",
                                          "queue_priority_nonbalking_guarded_bounded_managed_iterator",
                                          "queue_priority_nonbalking_multiple_bounded_managed_iterator",
                                          "queue_priority_nonbalking_sequential_bounded_managed_iterator",
                                          "queue_priority_nonbalking_sequential_bounded_managed_iterators",
                                          "quick_sort_generic",
                                          "radix_sort_generic",
                                          "ring_sequential_bounded_managed_iterator",
                                          "sequential_search_generic",
                                          "set_discrete_sequential_bounded_managed_iterator",
                                          "set_simple_sequential_bounded_managed_iterator",
                                          "shaker_sort_generic",
                                          "shell_sort_generic",
                                          "stack_sequential_bounded_managed_iterator",
                                          "storage_manager_concurrent_generic",
                                          "storage_manager_sequential_generic",
                                          "straight_insertion_sort_generic",
                                          "straight_selection_sort_generic",
                                          "string_sequential_bounded_managed_iterator",
                                          "string_sequential_bounded_managed_noniterator_private_nongeneric",
                                          "swedish_character_utilities",
                                          "swedish_string_utilities",
                                          "topological_sort_bounded_managed_generic",
                                          "translate_filter_generic",
                                          "tree_arbitrary_double_bounded_managed",
                                          "tree_arbitrary_single_bounded_managed",
                                          "tree_binary_double_bounded_managed",
                                          "tree_binary_single_bounded_managed",
                                          "tree_search_arbitrary_generic",
                                          "tree_search_binary_generic",
                                          "tree_utilities_arbitrary_double_generic",
                                          "tree_utilities_arbitrary_single_generic",
                                          "tree_utilities_binary_double_generic",
                                          "tree_utilities_binary_single_generic",
                                          -------------------------------------------
                                          -- Needed by generics
                                          -------------------------------------------
                                          "Queue_Nonpriority_Nonbalking_Sequential_Bounded_Managed_Noniterator",
                                          "Set_Simple_Sequential_Bounded_Managed_Noniterator",
                                          "Stack_Sequential_Bounded_Managed_Noniterator"
                                         );
            when "static" =>
               for Library_Name use Project'Library_Name & Syst_Default.Static_Lib_Sufix;
            when "None" =>
               null;
         end case;

         case Syst_Default.Build is
            when "release" =>
               for Library_Name use Project'Library_Name & Syst_Default.Release_Lib_Sufix;
            when "debug" =>
               for Library_Name use Project'Library_Name & Syst_Default.Debug_Lib_Sufix;
            when "normal" =>
               for Library_Name use Project'Library_Name & Syst_Default.Normal_Lib_Sufix;
         end case;

      when "None" =>
         null;
   end case;
   package Builder is
      for Default_Switches ("Ada") use
        Syst_Default.Builder'Default_Switches ("Ada");
   end Builder;

   package Compiler is
      for Default_Switches ("Ada") use
        Syst_Default.Compiler'Default_Switches ("Ada");
   end Compiler;

   package Naming renames Syst_Default.Naming;
   --  package Naming is
   --     Switches
   --  end Naming;


   package IDE renames Syst_Default.IDE;
   --  package IDE is
   --     Switches
   --  end IDE;


end Adty_Booch;
